多线程
让步：
Thread.yield()方法，如果已经知道完成了在run方法的循环的一次迭代过程中所需的工作，可以给线程调度机制
一个暗示：你的工作已经做的差不多了，可以让别的线程使用CPU了。调用次方法后，你也是建议具有相同优先级的其他线程可以运行。
只是一个建议，不一定会被采纳。
后台线程(daemon)：
所谓后台线程，是指在程序运行的时候再后台提供一种通用服务的线程，并且这种线程并不属于程序中不可或缺的部分。因此，当所有
的非后台线程结束时，程序也就终止了，同时会杀死进程中的所有后台线程。反过来说，只要有任何非后台线程还在运行，程序就不会终止。
比如执行main的就是一个非后台线程。
Thread.setDaemon()方法:设置后台线程。
后台线程中创建的任何线程将自动被设置为后台线程。
后台线程不执行finally的情况下就会终止run方法。

加入一个线程:
一个线程可以在其他线程之上调用join()方法，其效果是等待一段时间直到第二个线程结束才继续执行。
如果某个线程在另一个线程t上调用t.join()
,此线程将被挂起，直到目标线程t结束才恢复（t.isAlive()返回为假）
interrupt()方法：当另一个线程在改线程上调用此方法时，将给该线程设定一个标志，表明该线程已经被中断。
然而，一次呗捕获时将清理这个标志。



