import java.util.concurrent.TimeUnit

apply plugin: 'com.android.application'
apply plugin: 'findbugs'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.weishop.test"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }

//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a' //select ABIs to build APKs for
//            universalApk true //generate an additional APK that contains all the ABIs
//        }
//    }
//
//    // map for the version code
//    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]
//
//    android.applicationVariants.all { variant ->
//        // assign different version code for each output
//        variant.outputs.each { output ->
//            output.versionCodeOverride =
//                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + android.defaultConfig.versionCode
//        }
//    }


    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}


task findbugs(type: FindBugs) {
    //toolVersion = "2.0.1"
    ignoreFailures = true//发现警告的时候是否终止编译
    effort = "max"//分析的级别，min，default，max，级别越高精度越高越容易找到bug，相应占用内存越高
    reportLevel = "low"
//报告的bug级别，low,medium,high,设置low所有的bug都报告;设置medium,报告，medium，high;设置high,至报告high
    excludeFilter = file("./findbugs.xml") //指定过滤文件，不报告的bug类型
//    includeFilter 哪些bug需要报告
    classes = files("$project.buildDir/intermediates/classes/prod/debug/com/weishop/")//要分析的二进制文件目录
    source = fileTree('src/main/java/')
    classpath = files()
    reports {
        xml.enabled = false
        html.enabled = true
        html {
            destination "$project.buildDir/findbugs.html"
        }
    }
}

project.configurations.all {

    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '27.1.1'
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
    implementation 'com.android.support:design:27.1.1'
    compile 'com.android.support:support-v4:27.1.1'
    compile 'com.android.support:multidex:1.0.3'
    compile 'org.greenrobot:eventbus:3.0.0'

    compile 'io.reactivex:rxandroid:1.2.1'

    compile 'io.reactivex:rxjava:1.2.3'
    implementation 'com.airbnb.android:lottie:2.6.1'
    implementation 'com.robinhood.ticker:ticker:2.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-alpha2'



}
